name: Tests

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test-macos:
    name: macOS Integration Tests
    runs-on: macos-15-xlarge

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Build
        run: cargo build --verbose

      - name: Run unit tests
        run: cargo nextest run --profile ci --bins --verbose

      - name: Run smoke tests
        run: cargo nextest run --profile ci --test smoke_test --verbose

      - name: Run weak mode integration tests
        run: |
          # On macOS, we only support weak mode due to PF limitations
          # (PF translation rules cannot match on user/group)
          cargo nextest run --profile ci --test weak_integration --verbose

  test-linux:
    name: Linux Tests
    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v4

      - name: Fix permissions from previous runs
        run: |
          # Clean up any files left from previous sudo runs
          if [ -d target ]; then
            sudo chown -R $(whoami):$(whoami) target || true
          fi
          if [ -d ~/.cargo/registry ]; then
            sudo chown -R $(whoami):$(whoami) ~/.cargo/registry || true
          fi

      - name: Install nextest
        run: |
          source ~/.cargo/env
          if ! command -v cargo-nextest &> /dev/null; then
            cargo install cargo-nextest --locked
          fi

      - name: Build
        run: |
          source ~/.cargo/env
          cargo build --verbose

      - name: Run unit tests
        run: |
          source ~/.cargo/env
          cargo nextest run --profile ci --bins --verbose

      - name: Run smoke tests
        run: |
          source ~/.cargo/env
          cargo nextest run --profile ci --test smoke_test --verbose

      - name: Run Linux jail integration tests
        run: |
          source ~/.cargo/env
          # Run all tests without CI workarounds since this is a self-hosted runner
          sudo -E $(which cargo) nextest run --profile ci --test linux_integration --verbose

      - name: Fix permissions after tests
        if: always()
        run: |
          # Fix ownership of files created by sudo during tests
          sudo chown -R $(whoami):$(whoami) target || true
          sudo chown -R $(whoami):$(whoami) ~/.cargo/registry || true

  test-weak:
    name: Weak Mode Integration Tests (Linux)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Build
        run: cargo build --verbose

      - name: Run weak mode integration tests
        run: cargo nextest run --profile ci --test weak_integration --verbose

  clippy:
    name: Clippy (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

  fmt:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: cargo fmt -- --check
